@import './src/scss/components/functions/rems';
@import './src/scss/components/functions/width';
@import './bower_components/susy/sass/susy';

$susy: (
    container: auto,
    container-position: center,
    global-box-sizing: border-box,
    output: float,
    columns: 12,
    column-width: 80px,
    gutters: 15px/40px,
    gutter-position: inside-static,
    math: fluid
);

$font: Arial, Helvetica, 'helvetica neue', sans-serif;

$grey-color: #4c4851;
$white-color: #ffffff;
$light-grey-color: #ccc6c0;
$purple-color: #5f5cb8;
$purple-lighter-color: #9999ff;
$grey-darkest-color: #333333;
$grey-dark-color: #424242;
$brown-color: #a09a97;
$brown-darker-color: #736258;
$red-color: #ff4056;
$footer-color: #5c5963;
$grey-background: #f5f4f3;
$header: #4a5062;

$padding: 15px;
$max-width: 1680px;
$max-width-rem: 105rem;
$max-width-large: 1024px;
$max-width-large-rem: 64rem;
$max-width-medium: 720px;
$max-width-medium-rem: 45rem;

$speed: 500ms;
$effect: ease-in-out;

$opacity: 0.4;

$prefixes: -webkit-, -moz-, -o-, -ms-, "";

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model;
     -moz-box-sizing: $box-model;
          box-sizing: $box-model;
}

@mixin transition($property, $speed: $speed, $effect: $effect) {
    @each $prefix in $prefixes {
        #{$prefix}transition: $property $speed $effect;
    }
}


//@include borderRadius(16px);
@mixin borderRadius($size) {
    @if length($size) == 1 {
        @each $prefix in $prefixes {
            @if $prefix != "-webkit-" {
                #{$prefix}border-radius: $size;
            }
        }
    } @else {
        @if $prefix != "-webkit-" {
            @include customBorderRadius($size);
        }
    }
}

//@include borderRadius(4px, 8px, 16px, 32px);
@mixin customBorderRadius($topLeft: 0, $topRight: 0, $bottomRight: 0, $bottomLeft: 0) {
    @each $prefix in $prefixes {
        @if $topLeft != 0 { #{$prefix}border-top-left-radius: $topLeft; }
        @if $topRight != 0 { #{$prefix}border-top-right-radius: $topRight; }
        @if $bottomRight != 0 { #{$prefix}border-bottom-right-radius: $bottomRight; }
        @if $bottomLeft != 0 { #{$prefix}border-bottom-left-radius: $bottomLeft; }
    }
}

@mixin after() {
    content: '';
    display: block;
    visibility: hidden;
    clear: both;
    height: 0;
}

@mixin placeholder {
    &::-webkit-input-placeholder {@content}
    &:-moz-placeholder           {@content}
    &::-moz-placeholder          {@content}
    &:-ms-input-placeholder      {@content}
}

@mixin lato-family {
    font-family: 'Lato', $font;
    font-weight: 300;
}

@mixin bp($point) {

    @if $point == large {
        @media (min-width: 64.000em) { @content; }
    }
    @else if $point == medium {
        @media (min-width: 48.000em) { @content; }
    }
}
